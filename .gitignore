# Byte-compiled / optimized / DLL files
__pycache__/
*.pyc
*.pyo
*.pyd

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Database
*.sqlite3
*.sqlite
.db

# FastAPI generated files
__pydantic_main__.py

# Editor files
.vscode/
*.sublime-workspace
*.sublime-project

# Environment variables
.env

# Log files
*.log

# Dependency folders
env/
venv/
venv3/
venv2/
.venv/
.env/
env.bak/
venv.bak/
env.tmp/
venv.tmp/
env.temp/
venv.temp/
.env.tmp/
.venv.tmp/
.env.temp/
.venv.temp/
env.DS_Store/
venv.DS_Store/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# pytest
__pycache__/
.pytest_cache/
.coverage
.coverage.*
.cache

# pycodestyle
.pycodestyle
.tox

# mypy
.mypy_cache/
.dmypy.json
.dmypy/

# Pyre type checker
.pyre/

# pipenv
# According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
# However, in case of collaboration, if having platform-specific dependencies or dependencies
# having no cross-platform support, pipenv may install dependencies that don't work, or not
# install all needed dependencies.
# Commenting the following line would leave Pipfile.lock untracked.
Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env.local
.env.development.local
.env.test.local
.env.production.local

# .env files should not be included in version control.
# .env*

# Django stuff:
*.log
*.pot
*.pyc
__pycache__/

# VS Code directories
.vscode/

# Jupyter Notebook
.ipynb_checkpoints

# Spyder project settings
.spyderproject
.spyproject

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Sublime Tex
